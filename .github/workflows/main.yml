# Nome do workflow CI
name: CI

# Eventos que desencadeiam o workflow
on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  workflow_dispatch:

# Permissões necessárias para o workflow
permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write

# Definição de jobs
jobs:
  lint:
    # Validação da formatação e organização do codigo
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.10"]
        os: [ubuntu-latest]

    # Configuração do ambiente de execução
    runs-on: ${{matrix.os}}

    # Passos do job
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python-version}}

      # Instalação das dependências do projeto
      - name: Install Project
        run: pip install '.[test]'
      # Linter
      - name: Look for style errors
        run: flake8 --exclude .venv,build
      - name: Check for import style
        run: isort --profile=black --ckeck --diff dundie tests integration
      - name: Loog for auto format errors
        run: black --ckeck --diff dundie tests integrations

  tests:
    # Configuração da estratégia de execução
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10"]
        os: [ubuntu-latest]

    # Configuração do ambiente de execução
    runs-on: ${{matrix.os}}

    # Passos do job
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python-version}}

      # Instalação das dependências do projeto
      - name: Install Project
        run: pip install '.[test]'

      # Execução dos testes
      - name: Run tests
        run: pytest -v --junitxml=test-result.xml

      # Publicação dos resultados dos testes
      - name: publish junit results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: test-result.xml
          check_name: Test result (Python ${{matrix.python-version}})
